AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-cognito-example

  Sample SAM app using Amazon Cognito for API authentication

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  CognitoUserEmail:
    Description: Email address of the created user
    Type: String
  APIStageName:
    Default: api
    Description: StageName of API Gateway deployment
    Type: String

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.no_auth_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
            RestApiId: !Ref AppApi
  HelloWorldWithAuth:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello_world/
      Handler: app.auth_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        HelloWorldWithAuth:
          Type: Api
          Properties:
            Path: /hellowithauth
            Method: get
            RestApiId: !Ref AppApi
            Auth:
              Authorizer: CognitoAuthorizer
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MyUserPool
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
  UserPoolUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      Username: !Ref CognitoUserEmail
      UserPoolId: !Ref UserPool
  AppApi:
    DependsOn: UserPool
    Type: AWS::Serverless::Api
    Properties:
      Name: HelloWorldAPI
      StageName: !Ref APIStageName
      Cors: "'*'"
      Auth:
        Authorizers:
            CognitoAuthorizer:
              UserPoolArn: !GetAtt "UserPool.Arn"

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Hello World function"
    Value: !Sub "https://${AppApi}.execute-api.${AWS::Region}.amazonaws.com/${APIStageName}/hello/"
  HelloWorldWithAuthApi:
    Description: "API Gateway endpoint URL for Hello World With Auth function"
    Value: !Sub "https://${AppApi}.execute-api.${AWS::Region}.amazonaws.com/${APIStageName}/hellowithauth/"
  UserPoolId:
    Description: "ID of the Cognito User Pool"
    Value: !Ref UserPool
  CognitoClientId:
    Description: "ID of the Cognito User Pool Client"
    Value: !Ref UserPoolClient